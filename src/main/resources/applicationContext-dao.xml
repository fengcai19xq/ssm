<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	   <property name="driverClassName">
	     <value>${jdbc.driverClassName}</value>
	   </property>
	   <property name="url"> 
	     <value>${jdbc.url}</value>
	   </property>
	   <property name="username">
	     <value>${jdbc.username}</value>
	   </property>
	   <property name="password">
	     <value>${jdbc.password}</value>
	   </property>
	   <property name="initialSize">
	      <value>${jdbc.initialSize}</value>
	   </property>
	   <property name="maxActive">
	    <value>${jdbc.maxActive}</value>
	   </property>
	    <property name="testOnBorrow" value="true" />
	   <property name="testOnReturn" value="true" />
	   <property name="testWhileIdle" value="true" />
	   <property name="validationQuery" value="select count(1) from dual" /> 
 	</bean>

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"
	proxy-target-class="true" />

<!--     <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean> -->

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="spring.demo.springmvc.business.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource" ref="dataSource"/>
        
       <!--  <property name="typeAliasesPackage"
                  value="spring.demo.springmvc.business.model"/> -->
        <property name="plugins">
            <list>
                <ref bean="mybatisCommonInterceptor"/>
                <ref bean="mybatisPageInterceptor"/>
            </list>
        </property>
        <property name="mapperLocations" value="classpath*:spring/demo/springmvc/business/mapper/**/*Mapper.xml"/>
    </bean>

    <bean name="mybatisPageInterceptor" class="com.zhaogang.saturn.dal.mybatis.page.PageInterceptor">
    	<property name="dialect" value="oracle" />
    </bean>
    <bean name="mybatisCommonInterceptor" class="com.zhaogang.saturn.dal.mybatis.log.MybatisCommonInterceptor">
    </bean>

</beans>
